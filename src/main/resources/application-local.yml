server:
  port: 8083

spring:
  servlet.multipart:
    max-file-size: 500KB
    max-request-size: 1MB
  data.web.pageable:
    default-page-size: 20
    max-page-size: 100
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:testdb
    username: admin
    password:
    driverClassName: org.h2.Driver
    initialization-mode: always
    schema: classpath*:/db/h2/bootstrap_schema.sql
    data: classpath*:/db/h2/bootstrap_data.sql
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: validate
    show-sql: false

swagger:
  auth:
    token-url: http://localhost:8180/auth/realms/puff/protocol/openid-connect/token
    client-id: user-auth
    client-secret: f80e13fa-5e3f-4078-939f-4e2d084c38da   # DO NOT INCLUDE IN PROD
  api:
    title: Test Runner REST Api
    description: Test Runner REST Api documentation and management
    contact:
      name: Benjamin Kostiuk
      url:
      email: benkostiuk1@gmail.com
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT
    version: 0.0.1

management:
  server:
    port: 8083
    address: 127.0.0.1
  endpoints:
    enabled-by-default: false
  endpoint:
    health.enabled: true
    info.enabled: true

keycloak:
  realm: puff
  auth-server-url: http://localhost:8180/auth
  ssl-required: external
  resource: test-runner
  principal-attribute: preferred_username
  bearer-only: true

service-account:
  client-id: puff-service-acc
  client-secret: 6d29c988-5da1-4528-9058-c288f0434e89   # DO NOT INCLUDE IN PROD

runner:
  timeouts:  # Timeout values in seconds for each of the layers running test cases
    # These should be in ascending order
    entry-script: 5       # Time to run in shell script
    docker-container: 7   # Time to run in container

  container.memory: 400       # Amount of memory (RAM) (Mb) allocated for each test case to run in a container
  dir: WORKING_DIR            # Path to working directory to build test cases in
  env: /runner/environments/reg.env  # Environment with values for entry script

docker:
  build:
    dir: /code    # Working directory to construct in docker image
    timeout: 10    # Timeout, in seconds, of docker build process
    python3:
      entry: /runner/docker/python3/python_entry.sh
      dockerfile: /runner/docker/python3/Dockerfile
    java:
      entry: TODO
      dockerfile: /runner/docker/java/Dockerfile
    haskell:
      entry: /runner/docker/haskell/haskell_entry.sh
      dockerfile: /runner/docker/haskell/Dockerfile
